{"version":3,"sources":["webpack:///../docs/index.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","useFormState","FormStateContext","Field","formState","Provider","value","as","name","required","isMDXComponent"],"mappings":"4RAQaA,G,UAAe,S,gMAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,uBADR,yBAGA,qBAAG,0BAAYC,WAAW,KAAvB,yBAAH,gBACA,iBAAQ,CACN,GAAM,QADR,QAGA,iBAAQ,CACN,GAAM,MADR,MAGA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,mBADZ,qCAIL,iBAAQ,CACN,GAAM,QADR,QAGA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,8mBA0BL,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,mdAA4dC,SAAO,GACpgBL,QACAH,kBACAS,eACAC,iBACAC,qBACAC,WANogB,gBAOpgBZ,IAPogB,EAQpgBH,eARogB,GASngBO,QAAQ,eACZ,WACK,IAAMS,EAAYH,cAClB,OAAO,YAAC,IAAiBI,SAAlB,CAA2BC,MAAOF,GACzC,wBACE,uBACE,+BAEE,YAAC,IAAD,CAAOG,GAAG,QAAQC,KAAK,WAAWC,UAAQ,EAACd,QAAQ,YAGvD,uBACE,+BAEE,YAAC,IAAD,CAAOY,GAAG,QAAQC,KAAK,MAAMC,UAAQ,EAACd,QAAQ,iBAOxD,0BAAS,6BAAGC,WAAW,KAAQ,CAC3B,KAAQ,uBADH,gBAAT,iBAE2C,6BAAGA,WAAW,KAAQ,CAC7D,KAAQ,2BAD+B,oBAF3C,iBAKA,6BAAGA,WAAW,KAAQ,CAClB,KAAQ,wBADZ,SALA,oBAQG,6BAAGA,WAAW,KAAQ,CACrB,KAAQ,wBADT,iBARH,IAU+B,6BAAGA,WAAW,KAAQ,CACjD,KAAQ,8BADmB,cAV/B,WAaA,2FAA0E,6BAAGA,WAAW,KAAQ,CAC5F,KAAQ,6BAD8D,eAA1E,IAE6B,6BAAGA,WAAW,KAAQ,CAC/C,KAAQ,gCADiB,cAF7B,KAI6B,6BAAGA,WAAW,KAAQ,CAC/C,KAAQ,mCADiB,gBAJ7B,W,8LAWJJ,EAAWkB,gBAAiB","file":"component---docs-index-mdx-cb9d85264faf8fadd17d.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"D:/workspace/rx-form-state/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from 'docz';\nimport { useFormState, FormStateContext, Field } from '../src';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"sinouirx-form-state\"\n    }}>{`@sinoui/rx-form-state`}</h1>\n    <p><inlineCode parentName=\"p\">{`@sinoui/rx-form-state`}</inlineCode>{`是用来管理表单状态的库。`}</p>\n    <h2 {...{\n      \"id\": \"快速入门\"\n    }}>{`快速入门`}</h2>\n    <h3 {...{\n      \"id\": \"安装\"\n    }}>{`安装`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`yarn add @sinoui/rx-form-state\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"入门示例\"\n    }}>{`入门示例`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import React from 'react';\nimport { useFormState, FormStateContext, Field } from '@sinoui/rx-form-state';\n\nfunction FormDemo() {\n  const initialValue = {}; // 表单默认值\n  const options = {}; // 创建表单状态管理器的配置\n  const formState = useFormState(initialValue, options);\n\n  return (\n    <FormStateContext.Provider value={formState}>\n      <form>\n        <label>\n          姓名:\n          <Field as=\"input\" name=\"userName\" required />\n        </label>\n        <label>\n          年龄：\n          <Field as=\"input\" name=\"age\" required />\n        </label>\n      </form>\n    </FormStateContext.Provider>\n  );\n}\n`}</code></pre>\n    <Playground __position={0} __code={'() => {\\n  const formState = useFormState()\\n  return (\\n    <FormStateContext.Provider value={formState}>\\n      <form>\\n        <div>\\n          <label>\\n            姓名：\\n            <Field as=\\\"input\\\" name=\\\"userName\\\" required />\\n          </label>\\n        </div>\\n        <div>\\n          <label>\\n            年龄：\\n            <Field as=\\\"input\\\" name=\\\"age\\\" required />\\n          </label>\\n        </div>\\n      </form>\\n    </FormStateContext.Provider>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      useFormState,\n      FormStateContext,\n      Field,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const formState = useFormState();\n        return <FormStateContext.Provider value={formState}>\n        <form>\n          <div>\n            <label>\n              姓名：\n              <Field as=\"input\" name=\"userName\" required mdxType=\"Field\" />\n            </label>\n          </div>\n          <div>\n            <label>\n              年龄：\n              <Field as=\"input\" name=\"age\" required mdxType=\"Field\" />\n            </label>\n          </div>\n        </form>\n      </FormStateContext.Provider>;\n      }}\n    </Playground>\n    <p>{`使用`}<a parentName=\"p\" {...{\n        \"href\": \"api-use-form-state\"\n      }}>{`useFormState`}</a>{`创建表单状态管理器对象，通过`}<a parentName=\"p\" {...{\n        \"href\": \"api-form-state-context\"\n      }}>{`FormStateContext`}</a>{`加入到表单上下文中。\n通过`}<a parentName=\"p\" {...{\n        \"href\": \"api-field-component\"\n      }}>{`Field`}</a>{`组件管理单个表单域。\n还可以通过`}<a parentName=\"p\" {...{\n        \"href\": \"api-use-field-array\"\n      }}>{`useFieldArray`}</a>{`和`}<a parentName=\"p\" {...{\n        \"href\": \"api-field-array-component\"\n      }}>{`FieldArray`}</a>{`实现嵌套表单。`}</p>\n    <p>{`@sinoui/rx-form-state 可以在 React 和 React native 中使用。可以与多种 UI 库组合使用，如`}<a parentName=\"p\" {...{\n        \"href\": \"https://material-ui.com/\"\n      }}>{`material-ui`}</a>{`、`}<a parentName=\"p\" {...{\n        \"href\": \"https://ant.design/index-cn\"\n      }}>{`ant design`}</a>{`和 `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/sinoui/core\"\n      }}>{`@sinoui/core`}</a>{`。`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}