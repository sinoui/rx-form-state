{"version":3,"sources":["webpack:///../docs/apis/RelyRule.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","of","RelyRule","isMDXComponent"],"mappings":"qQAQaA,G,UAAe,S,wMAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,YADR,YAGA,sCACA,uBAAK,gCAAMC,WAAW,OAAU,CAC5B,UAAa,gBADZ,wDAIL,iBAAQ,CACN,GAAM,QADR,QAGA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,mHASL,6CACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,kKAWL,4BACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,4MAWL,iBAAQ,CACN,GAAM,MADR,MAGA,qCAAoB,0BAAYA,WAAW,KAAvB,yBAApB,YACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,uNAYL,iBAAQ,CACN,GAAM,MADR,MAGA,YAAC,IAAD,CAAOC,GAAIC,IAAUH,QAAQ,gB,sMAKjCH,EAAWO,gBAAiB","file":"component---docs-apis-rely-rule-mdx-4d07597e68408f97d296.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"D:/workspace/rx-form-state/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Props } from 'docz';\nimport RelyRule from '../../src/RelyRule';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"relyrule\"\n    }}>{`RelyRule`}</h1>\n    <p>{`添加值关联计算规则的组件。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`import { RelyRule } from '@sinoui/rx-form-state';\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"基本用法\"\n    }}>{`基本用法`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<RelyRule\n  relyFields={['B', 'C']}\n  relyFn={(draft) => {\n    draft.A = draft.B + draft.C + 3;\n  }}\n/>\n`}</code></pre>\n    <p>{`注意，此组件只能在表单上下文中使用。如：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<Form state={formState}>\n  <RelyRule\n    relyFields={['B', 'C']}\n    relyFn={(draft) => {\n      draft.A = draft.B + draft.C + 3;\n    }}\n  />\n</Form>\n`}</code></pre>\n    <p>{`或者：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<FormStateContext.Provider value={formState}>\n  <RelyRule\n    relyFields={['B', 'C']}\n    relyFn={(draft) => {\n      draft.A = draft.B + draft.C + 3;\n    }}\n  />\n</FormStateContext.Provider>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"本质\"\n    }}>{`本质`}</h2>\n    <p>{`此组件只是简单封装了一下 `}<inlineCode parentName=\"p\">{`formState.addRelyRule`}</inlineCode>{` 方法，相当于：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`function FormDemo() {\n  const formState = useFormState();\n\n  useEffect(() => {\n    return formState.addRelyRule(['B', 'C'], (draft) => {\n      draft.A = draft.B + draft.C;\n    });\n  }, [formState]);\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"属性\"\n    }}>{`属性`}</h2>\n    <Props of={RelyRule} mdxType=\"Props\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}