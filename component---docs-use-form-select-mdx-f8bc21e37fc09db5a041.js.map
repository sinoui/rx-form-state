{"version":3,"sources":["webpack:///../docs/useFormSelect.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"8OAMaA,G,UAAe,S,wMAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,iBADR,iBAGA,sCACA,uBAAK,gCAAMC,WAAW,OAAU,CAC5B,UAAa,gBADZ,6DAIL,iBAAQ,CACN,GAAM,QADR,QAGA,8BAAa,0BAAYA,WAAW,KAAvB,iBAAb,iBAAwF,0BAAYA,WAAW,KAAvB,YAAxF,kBACA,qBAAG,0BAAYA,WAAW,KAAvB,iBAAH,UACA,sBACE,kBAAIA,WAAW,MAAf,IAAyB,0BAAYA,WAAW,MAAvB,aAAzB,UACA,kBAAIA,WAAW,MAAf,IAAyB,0BAAYA,WAAW,MAAvB,aAAzB,YAEF,iBAAQ,CACN,GAAM,oBADR,IAEQ,0BAAYA,WAAW,MAAvB,aAFR,UAGA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,iGAML,iBAAQ,CACN,GAAM,qBADR,IAEQ,0BAAYA,WAAW,MAAvB,aAFR,WAGA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,+JASL,iBAAQ,CACN,GAAM,QADR,QAGA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,iO,sMAcTJ,EAAWK,gBAAiB","file":"component---docs-use-form-select-mdx-f8bc21e37fc09db5a041.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"D:/workspace/rx-form-state/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"useformselect\"\n    }}>{`useFormSelect`}</h1>\n    <p>{`提取表单状态的 hook。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`import { useFormSelect } from '@sinoui/rx-form-state';\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"基本用法\"\n    }}>{`基本用法`}</h2>\n    <p>{`我们可以通过`}<inlineCode parentName=\"p\">{`useFormSelect`}</inlineCode>{`获取到表单中的任何状态，通过`}<inlineCode parentName=\"p\">{`selector`}</inlineCode>{`函数定义最终返回的状态数据。`}</p>\n    <p><inlineCode parentName=\"p\">{`useFormSelect`}</inlineCode>{`有两种用法：`}</p>\n    <ul>\n      <li parentName=\"ul\">{`在`}<inlineCode parentName=\"li\">{`formState`}</inlineCode>{`上下文中使用`}</li>\n      <li parentName=\"ul\">{`在`}<inlineCode parentName=\"li\">{`formState`}</inlineCode>{`上下文之外使用`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"在formstate上下文中使用\"\n    }}>{`在`}<inlineCode parentName=\"h3\">{`formState`}</inlineCode>{`上下文中使用`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`const userName = useFormSelect(\n  (formStateModel) => formStateModel.values.userName,\n);\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"在formstate上下文之外使用\"\n    }}>{`在`}<inlineCode parentName=\"h3\">{`formState`}</inlineCode>{`上下文之外使用`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`const formState = ...; // 通过某种方式获取到formState\n\nconst userName = useFormSelect(\n  formState,\n  (formStateModel) => formStateModel.values.userName,\n);\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"方法签名\"\n    }}>{`方法签名`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`function useFormSelect<T, M>(\n  selector: (FormStateModel: FormStateModel<T>) => M,\n): M;\nfunction useFormSelect<T, M>(\n  formState: FormState<T>,\n  selector: (FormStateModel: FormStateModel<T>) => M,\n): M;\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}